(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{375:function(t,e,a){"use strict";a.r(e);var s=a(44),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_2-为什么要使用线程池"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-为什么要使用线程池"}},[t._v("#")]),t._v(" 2.为什么要使用线程池？")]),t._v(" "),a("blockquote",[a("p",[t._v("为了减少创建和销毁线程的次数，让每个线程可以多次使用,可根据系统情况调整执行的线程数量，防止消耗过多内存,所以我们可以使用线程池.")])]),t._v(" "),a("h2",{attrs:{id:"_3-线程池有什么作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-线程池有什么作用"}},[t._v("#")]),t._v(" 3. 线程池有什么作用？")]),t._v(" "),a("blockquote",[a("p",[t._v("线程池作用就是限制系统中执行线程的数量。\n根据系统的环境情况，可以自动或手动设置线程数量，达到运行的最佳效果；少了浪费了系统资源，多了造成系统拥挤效率不高。\n用线程池控制线程数量，其他线程排队等候。一个任务执行完毕，再从队列的中取最前面的任务开始执行。\n若队列中没有等待进程，线程池的这一资源处于等待。当一个新任务需要运行时，如果线程池中有等待的工作线程，就可以开始运行了；否则进入等待队列。")])])])}),[],!1,null,null,null);e.default=r.exports}}]);